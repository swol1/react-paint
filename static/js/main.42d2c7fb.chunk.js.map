{"version":3,"sources":["app/components/Name.js","app/components/useWindowSize.js","app/components/Canvas.js","app/components/ColorPicker.js","app/components/RefreshButton.js","app/components/Paint.js","index.js","app/App.js"],"names":["React","memo","useState","name","setName","className","value","onChange","e","target","onClick","setSelectionRange","length","placeholder","useWindowSize","cb","window","innerWidth","innerHeight","windowWidth","windowHeight","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","Canvas","forwardRef","props","ref","drawing","setDrawing","width","setWidth","height","setHeight","canvasRef","useRef","ctx","current","getContext","stopDrawing","closePath","useImperativeHandle","handleClear","clearRect","onMouseDown","lineJoin","lineCap","lineWidth","strokeStyle","color","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","onMouseUp","onMouseOut","onMouseMove","coords","lineTo","stroke","handleMouseMove","ColorPicker","colors","activeColor","setActiveColor","map","i","key","type","checked","style","background","Paint","setColors","headerRef","offsetHeight","getColors","useCallback","baseColor","randomColor","slice","fetch","then","res","json","hex","visible","setVisible","timeoutId","clearTimeout","setTimeout","borderTop","Name","marginTop","RefreshButton","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42d2c7fb.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport default React.memo(() => {\n  const [name, setName] = useState('');\n  return (\n    <label className=\"header-name\">\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n        onClick={e => e.target.setSelectionRange(0, e.target.value.length)}\n        placeholder=\"Untitled\"\n      />\n    </label>\n  );\n});\n","import React, { useState, useEffect } from 'react'\n\nexport default function useWindowSize(cb) {\n  const [[windowWidth, windowHeight], setWindowSize] = useState([window.innerWidth, window.innerHeight]);\n  useEffect(() => {\n    const handleResize = () => {\n      cb();\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, []);\n  return [windowWidth, windowHeight]\n}\n","import React, { forwardRef, useState, useEffect, useRef, useImperativeHandle } from 'react'\nimport useWindowSize from './useWindowSize'\n\nconst Canvas = forwardRef((props, ref) => {\n  const [drawing, setDrawing] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  const [height, setHeight] = useState(window.innerHeight);\n\n  const canvasRef = useRef();\n  const ctx = useRef();\n\n  useEffect(() => {\n    ctx.current = canvasRef.current.getContext('2d');\n  }, []);\n\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  });\n\n  useImperativeHandle(ref, () => ({\n    handleClear() {\n      ctx.current = canvasRef.current.getContext('2d');\n      ctx.current.clearRect(0, 0, windowWidth, windowHeight)\n    }\n  }));\n\n\n  function handleMouseMove(e) {\n    // actual coordinates\n    const coords = [\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop\n    ];\n    if (drawing) {\n      ctx.current.lineTo(...coords);\n      ctx.current.stroke();\n    }\n    if (props.handleMouseMove) {\n      props.handleMouseMove(...coords);\n    }\n  }\n\n  function startDrawing(e) {\n    ctx.current.lineJoin = 'round';\n    ctx.current.lineCap = 'round';\n    ctx.current.lineWidth = 6;\n    ctx.current.strokeStyle = props.color;\n    ctx.current.beginPath();\n    // actual coordinates\n    ctx.current.moveTo(\n      e.clientX - canvasRef.current.offsetLeft,\n      e.clientY - canvasRef.current.offsetTop\n    );\n    setDrawing(true)\n  }\n\n  function stopDrawing() {\n    ctx.current.closePath();\n    setDrawing(false);\n  }\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={props.width || width}\n        height={props.height || height}\n        onMouseDown={startDrawing}\n        onMouseUp={stopDrawing}\n        onMouseOut={stopDrawing}\n        onMouseMove={handleMouseMove}\n      />\n    </>\n  )\n});\n\nexport default Canvas\n","import React from 'react'\n\nexport default function ColorPicker({ colors = [], activeColor, setActiveColor }) {\n  if (!colors.length) return null;\n  return (\n    <fieldset className=\"color-picker\">\n      {colors.map((color, i) => (\n        <label key={i}>\n          <input\n            name=\"color\"\n            type=\"radio\"\n            value={color}\n            checked={activeColor === color}\n            onChange={() => setActiveColor(color)}\n          />\n          <span style={{ background: color }}/>\n        </label>\n      ))}\n    </fieldset>\n  );\n}\n","import React from 'react'\n\nexport default React.memo(({ cb }) => {\n  return <button className=\"button-refresh-colors\" onClick={cb}>&#8634; Get new colors</button>\n});\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport Name from './Name'\nimport Canvas from './Canvas'\nimport ColorPicker from './ColorPicker'\nimport RefreshButton from './RefreshButton'\nimport useWindowSize from './useWindowSize'\nimport randomColor from 'randomcolor'\n\nexport default function Paint() {\n  const [colors, setColors] = useState([]);\n  const [activeColor, setActiveColor] = useState(null);\n  const headerRef = useRef({ offsetHeight: 0 });\n\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n      .then(res => res.json())\n      .then(res => {\n        setColors(res.colors.map(color => color.hex.value));\n        setActiveColor(res.colors[0].hex.value);\n      })\n  }, []);\n\n  useEffect(getColors, []);\n\n  const [visible, setVisible] = useState(false);\n  let timeoutId = useRef();\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setVisible(true);\n    clearTimeout(timeoutId.current);\n    timeoutId.current = setTimeout(() => setVisible(false), 500)\n  });\n\n  const canvasRef = useRef();\n\n  return (\n    <div className=\"app\">\n      <header ref={headerRef} style={{ borderTop: `10px solid ${activeColor}` }}>\n        <div>\n          <Name/>\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <ColorPicker\n            colors={colors}\n            activeColor={activeColor}\n            setActiveColor={setActiveColor}\n          />\n          <RefreshButton cb={getColors} />\n          <button className=\"button-clear-colors\" onClick={() => canvasRef.current.handleClear()}>Clear canvas</button>\n        </div>\n      </header>\n      {activeColor && (\n        <Canvas\n          color={activeColor}\n          height={window.innerHeight - headerRef.current.offsetHeight - 15}\n          ref={canvasRef}\n        />\n      )}\n      <div className={`window-size ${visible ? '' : 'hidden'}`}>\n        {windowWidth} x {windowHeight}\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app/App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react'\nimport Paint from './components/Paint'\nimport '../style.css'\n\nexport default function App() {\n  return <Paint />\n}\n"],"sourceRoot":""}